// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/network/message/player/PlayerCommands.proto

package network.message.player;

public final class PlayerCommands {
  private PlayerCommands() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface BaseCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BaseCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .AddSquadron addSquadron = 1;</code>
     */
    network.message.player.PlayerCommands.AddSquadron getAddSquadron();
    /**
     * <code>optional .AddSquadron addSquadron = 1;</code>
     */
    network.message.player.PlayerCommands.AddSquadronOrBuilder getAddSquadronOrBuilder();

    /**
     * <code>optional .PlaceObstacle placeObstacle = 2;</code>
     */
    network.message.player.PlayerCommands.PlaceObstacle getPlaceObstacle();
    /**
     * <code>optional .PlaceObstacle placeObstacle = 2;</code>
     */
    network.message.player.PlayerCommands.PlaceObstacleOrBuilder getPlaceObstacleOrBuilder();

    public network.message.player.PlayerCommands.BaseCommand.CommandCase getCommandCase();
  }
  /**
   * Protobuf type {@code BaseCommand}
   */
  public  static final class BaseCommand extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:BaseCommand)
      BaseCommandOrBuilder {
    // Use BaseCommand.newBuilder() to construct.
    private BaseCommand(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BaseCommand() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BaseCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              network.message.player.PlayerCommands.AddSquadron.Builder subBuilder = null;
              if (commandCase_ == 1) {
                subBuilder = ((network.message.player.PlayerCommands.AddSquadron) command_).toBuilder();
              }
              command_ =
                  input.readMessage(network.message.player.PlayerCommands.AddSquadron.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((network.message.player.PlayerCommands.AddSquadron) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 1;
              break;
            }
            case 18: {
              network.message.player.PlayerCommands.PlaceObstacle.Builder subBuilder = null;
              if (commandCase_ == 2) {
                subBuilder = ((network.message.player.PlayerCommands.PlaceObstacle) command_).toBuilder();
              }
              command_ =
                  input.readMessage(network.message.player.PlayerCommands.PlaceObstacle.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((network.message.player.PlayerCommands.PlaceObstacle) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 2;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.player.PlayerCommands.internal_static_BaseCommand_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.player.PlayerCommands.internal_static_BaseCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              network.message.player.PlayerCommands.BaseCommand.class, network.message.player.PlayerCommands.BaseCommand.Builder.class);
    }

    private int commandCase_ = 0;
    private java.lang.Object command_;
    public enum CommandCase
        implements com.google.protobuf.Internal.EnumLite {
      ADDSQUADRON(1),
      PLACEOBSTACLE(2),
      COMMAND_NOT_SET(0);
      private int value = 0;
      private CommandCase(int value) {
        this.value = value;
      }
      public static CommandCase valueOf(int value) {
        switch (value) {
          case 1: return ADDSQUADRON;
          case 2: return PLACEOBSTACLE;
          case 0: return COMMAND_NOT_SET;
          default: throw new java.lang.IllegalArgumentException(
            "Value is undefined for this oneof enum.");
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public CommandCase
    getCommandCase() {
      return CommandCase.valueOf(
          commandCase_);
    }

    public static final int ADDSQUADRON_FIELD_NUMBER = 1;
    /**
     * <code>optional .AddSquadron addSquadron = 1;</code>
     */
    public network.message.player.PlayerCommands.AddSquadron getAddSquadron() {
      if (commandCase_ == 1) {
         return (network.message.player.PlayerCommands.AddSquadron) command_;
      }
      return network.message.player.PlayerCommands.AddSquadron.getDefaultInstance();
    }
    /**
     * <code>optional .AddSquadron addSquadron = 1;</code>
     */
    public network.message.player.PlayerCommands.AddSquadronOrBuilder getAddSquadronOrBuilder() {
      if (commandCase_ == 1) {
         return (network.message.player.PlayerCommands.AddSquadron) command_;
      }
      return network.message.player.PlayerCommands.AddSquadron.getDefaultInstance();
    }

    public static final int PLACEOBSTACLE_FIELD_NUMBER = 2;
    /**
     * <code>optional .PlaceObstacle placeObstacle = 2;</code>
     */
    public network.message.player.PlayerCommands.PlaceObstacle getPlaceObstacle() {
      if (commandCase_ == 2) {
         return (network.message.player.PlayerCommands.PlaceObstacle) command_;
      }
      return network.message.player.PlayerCommands.PlaceObstacle.getDefaultInstance();
    }
    /**
     * <code>optional .PlaceObstacle placeObstacle = 2;</code>
     */
    public network.message.player.PlayerCommands.PlaceObstacleOrBuilder getPlaceObstacleOrBuilder() {
      if (commandCase_ == 2) {
         return (network.message.player.PlayerCommands.PlaceObstacle) command_;
      }
      return network.message.player.PlayerCommands.PlaceObstacle.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (commandCase_ == 1) {
        output.writeMessage(1, (network.message.player.PlayerCommands.AddSquadron) command_);
      }
      if (commandCase_ == 2) {
        output.writeMessage(2, (network.message.player.PlayerCommands.PlaceObstacle) command_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (commandCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (network.message.player.PlayerCommands.AddSquadron) command_);
      }
      if (commandCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (network.message.player.PlayerCommands.PlaceObstacle) command_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static network.message.player.PlayerCommands.BaseCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static network.message.player.PlayerCommands.BaseCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static network.message.player.PlayerCommands.BaseCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static network.message.player.PlayerCommands.BaseCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static network.message.player.PlayerCommands.BaseCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static network.message.player.PlayerCommands.BaseCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static network.message.player.PlayerCommands.BaseCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static network.message.player.PlayerCommands.BaseCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static network.message.player.PlayerCommands.BaseCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static network.message.player.PlayerCommands.BaseCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(network.message.player.PlayerCommands.BaseCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BaseCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BaseCommand)
        network.message.player.PlayerCommands.BaseCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return network.message.player.PlayerCommands.internal_static_BaseCommand_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return network.message.player.PlayerCommands.internal_static_BaseCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                network.message.player.PlayerCommands.BaseCommand.class, network.message.player.PlayerCommands.BaseCommand.Builder.class);
      }

      // Construct using network.message.player.PlayerCommands.BaseCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        commandCase_ = 0;
        command_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.player.PlayerCommands.internal_static_BaseCommand_descriptor;
      }

      public network.message.player.PlayerCommands.BaseCommand getDefaultInstanceForType() {
        return network.message.player.PlayerCommands.BaseCommand.getDefaultInstance();
      }

      public network.message.player.PlayerCommands.BaseCommand build() {
        network.message.player.PlayerCommands.BaseCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public network.message.player.PlayerCommands.BaseCommand buildPartial() {
        network.message.player.PlayerCommands.BaseCommand result = new network.message.player.PlayerCommands.BaseCommand(this);
        if (commandCase_ == 1) {
          if (addSquadronBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = addSquadronBuilder_.build();
          }
        }
        if (commandCase_ == 2) {
          if (placeObstacleBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = placeObstacleBuilder_.build();
          }
        }
        result.commandCase_ = commandCase_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.player.PlayerCommands.BaseCommand) {
          return mergeFrom((network.message.player.PlayerCommands.BaseCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(network.message.player.PlayerCommands.BaseCommand other) {
        if (other == network.message.player.PlayerCommands.BaseCommand.getDefaultInstance()) return this;
        switch (other.getCommandCase()) {
          case ADDSQUADRON: {
            mergeAddSquadron(other.getAddSquadron());
            break;
          }
          case PLACEOBSTACLE: {
            mergePlaceObstacle(other.getPlaceObstacle());
            break;
          }
          case COMMAND_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        network.message.player.PlayerCommands.BaseCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (network.message.player.PlayerCommands.BaseCommand) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int commandCase_ = 0;
      private java.lang.Object command_;
      public CommandCase
          getCommandCase() {
        return CommandCase.valueOf(
            commandCase_);
      }

      public Builder clearCommand() {
        commandCase_ = 0;
        command_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilder<
          network.message.player.PlayerCommands.AddSquadron, network.message.player.PlayerCommands.AddSquadron.Builder, network.message.player.PlayerCommands.AddSquadronOrBuilder> addSquadronBuilder_;
      /**
       * <code>optional .AddSquadron addSquadron = 1;</code>
       */
      public network.message.player.PlayerCommands.AddSquadron getAddSquadron() {
        if (addSquadronBuilder_ == null) {
          if (commandCase_ == 1) {
            return (network.message.player.PlayerCommands.AddSquadron) command_;
          }
          return network.message.player.PlayerCommands.AddSquadron.getDefaultInstance();
        } else {
          if (commandCase_ == 1) {
            return addSquadronBuilder_.getMessage();
          }
          return network.message.player.PlayerCommands.AddSquadron.getDefaultInstance();
        }
      }
      /**
       * <code>optional .AddSquadron addSquadron = 1;</code>
       */
      public Builder setAddSquadron(network.message.player.PlayerCommands.AddSquadron value) {
        if (addSquadronBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          addSquadronBuilder_.setMessage(value);
        }
        commandCase_ = 1;
        return this;
      }
      /**
       * <code>optional .AddSquadron addSquadron = 1;</code>
       */
      public Builder setAddSquadron(
          network.message.player.PlayerCommands.AddSquadron.Builder builderForValue) {
        if (addSquadronBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          addSquadronBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 1;
        return this;
      }
      /**
       * <code>optional .AddSquadron addSquadron = 1;</code>
       */
      public Builder mergeAddSquadron(network.message.player.PlayerCommands.AddSquadron value) {
        if (addSquadronBuilder_ == null) {
          if (commandCase_ == 1 &&
              command_ != network.message.player.PlayerCommands.AddSquadron.getDefaultInstance()) {
            command_ = network.message.player.PlayerCommands.AddSquadron.newBuilder((network.message.player.PlayerCommands.AddSquadron) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 1) {
            addSquadronBuilder_.mergeFrom(value);
          }
          addSquadronBuilder_.setMessage(value);
        }
        commandCase_ = 1;
        return this;
      }
      /**
       * <code>optional .AddSquadron addSquadron = 1;</code>
       */
      public Builder clearAddSquadron() {
        if (addSquadronBuilder_ == null) {
          if (commandCase_ == 1) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 1) {
            commandCase_ = 0;
            command_ = null;
          }
          addSquadronBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .AddSquadron addSquadron = 1;</code>
       */
      public network.message.player.PlayerCommands.AddSquadron.Builder getAddSquadronBuilder() {
        return getAddSquadronFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .AddSquadron addSquadron = 1;</code>
       */
      public network.message.player.PlayerCommands.AddSquadronOrBuilder getAddSquadronOrBuilder() {
        if ((commandCase_ == 1) && (addSquadronBuilder_ != null)) {
          return addSquadronBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 1) {
            return (network.message.player.PlayerCommands.AddSquadron) command_;
          }
          return network.message.player.PlayerCommands.AddSquadron.getDefaultInstance();
        }
      }
      /**
       * <code>optional .AddSquadron addSquadron = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          network.message.player.PlayerCommands.AddSquadron, network.message.player.PlayerCommands.AddSquadron.Builder, network.message.player.PlayerCommands.AddSquadronOrBuilder> 
          getAddSquadronFieldBuilder() {
        if (addSquadronBuilder_ == null) {
          if (!(commandCase_ == 1)) {
            command_ = network.message.player.PlayerCommands.AddSquadron.getDefaultInstance();
          }
          addSquadronBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              network.message.player.PlayerCommands.AddSquadron, network.message.player.PlayerCommands.AddSquadron.Builder, network.message.player.PlayerCommands.AddSquadronOrBuilder>(
                  (network.message.player.PlayerCommands.AddSquadron) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 1;
        onChanged();;
        return addSquadronBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          network.message.player.PlayerCommands.PlaceObstacle, network.message.player.PlayerCommands.PlaceObstacle.Builder, network.message.player.PlayerCommands.PlaceObstacleOrBuilder> placeObstacleBuilder_;
      /**
       * <code>optional .PlaceObstacle placeObstacle = 2;</code>
       */
      public network.message.player.PlayerCommands.PlaceObstacle getPlaceObstacle() {
        if (placeObstacleBuilder_ == null) {
          if (commandCase_ == 2) {
            return (network.message.player.PlayerCommands.PlaceObstacle) command_;
          }
          return network.message.player.PlayerCommands.PlaceObstacle.getDefaultInstance();
        } else {
          if (commandCase_ == 2) {
            return placeObstacleBuilder_.getMessage();
          }
          return network.message.player.PlayerCommands.PlaceObstacle.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PlaceObstacle placeObstacle = 2;</code>
       */
      public Builder setPlaceObstacle(network.message.player.PlayerCommands.PlaceObstacle value) {
        if (placeObstacleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          placeObstacleBuilder_.setMessage(value);
        }
        commandCase_ = 2;
        return this;
      }
      /**
       * <code>optional .PlaceObstacle placeObstacle = 2;</code>
       */
      public Builder setPlaceObstacle(
          network.message.player.PlayerCommands.PlaceObstacle.Builder builderForValue) {
        if (placeObstacleBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          placeObstacleBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 2;
        return this;
      }
      /**
       * <code>optional .PlaceObstacle placeObstacle = 2;</code>
       */
      public Builder mergePlaceObstacle(network.message.player.PlayerCommands.PlaceObstacle value) {
        if (placeObstacleBuilder_ == null) {
          if (commandCase_ == 2 &&
              command_ != network.message.player.PlayerCommands.PlaceObstacle.getDefaultInstance()) {
            command_ = network.message.player.PlayerCommands.PlaceObstacle.newBuilder((network.message.player.PlayerCommands.PlaceObstacle) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 2) {
            placeObstacleBuilder_.mergeFrom(value);
          }
          placeObstacleBuilder_.setMessage(value);
        }
        commandCase_ = 2;
        return this;
      }
      /**
       * <code>optional .PlaceObstacle placeObstacle = 2;</code>
       */
      public Builder clearPlaceObstacle() {
        if (placeObstacleBuilder_ == null) {
          if (commandCase_ == 2) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 2) {
            commandCase_ = 0;
            command_ = null;
          }
          placeObstacleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .PlaceObstacle placeObstacle = 2;</code>
       */
      public network.message.player.PlayerCommands.PlaceObstacle.Builder getPlaceObstacleBuilder() {
        return getPlaceObstacleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlaceObstacle placeObstacle = 2;</code>
       */
      public network.message.player.PlayerCommands.PlaceObstacleOrBuilder getPlaceObstacleOrBuilder() {
        if ((commandCase_ == 2) && (placeObstacleBuilder_ != null)) {
          return placeObstacleBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 2) {
            return (network.message.player.PlayerCommands.PlaceObstacle) command_;
          }
          return network.message.player.PlayerCommands.PlaceObstacle.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PlaceObstacle placeObstacle = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          network.message.player.PlayerCommands.PlaceObstacle, network.message.player.PlayerCommands.PlaceObstacle.Builder, network.message.player.PlayerCommands.PlaceObstacleOrBuilder> 
          getPlaceObstacleFieldBuilder() {
        if (placeObstacleBuilder_ == null) {
          if (!(commandCase_ == 2)) {
            command_ = network.message.player.PlayerCommands.PlaceObstacle.getDefaultInstance();
          }
          placeObstacleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              network.message.player.PlayerCommands.PlaceObstacle, network.message.player.PlayerCommands.PlaceObstacle.Builder, network.message.player.PlayerCommands.PlaceObstacleOrBuilder>(
                  (network.message.player.PlayerCommands.PlaceObstacle) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 2;
        onChanged();;
        return placeObstacleBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:BaseCommand)
    }

    // @@protoc_insertion_point(class_scope:BaseCommand)
    private static final network.message.player.PlayerCommands.BaseCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new network.message.player.PlayerCommands.BaseCommand();
    }

    public static network.message.player.PlayerCommands.BaseCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BaseCommand>
        PARSER = new com.google.protobuf.AbstractParser<BaseCommand>() {
      public BaseCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new BaseCommand(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<BaseCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BaseCommand> getParserForType() {
      return PARSER;
    }

    public network.message.player.PlayerCommands.BaseCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AddSquadronOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AddSquadron)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 numAttackDice = 1;</code>
     */
    int getNumAttackDice();

    /**
     * <code>optional int32 numDefenseDice = 2;</code>
     */
    int getNumDefenseDice();
  }
  /**
   * Protobuf type {@code AddSquadron}
   */
  public  static final class AddSquadron extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:AddSquadron)
      AddSquadronOrBuilder {
    // Use AddSquadron.newBuilder() to construct.
    private AddSquadron(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private AddSquadron() {
      numAttackDice_ = 0;
      numDefenseDice_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AddSquadron(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              numAttackDice_ = input.readInt32();
              break;
            }
            case 16: {

              numDefenseDice_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.player.PlayerCommands.internal_static_AddSquadron_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.player.PlayerCommands.internal_static_AddSquadron_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              network.message.player.PlayerCommands.AddSquadron.class, network.message.player.PlayerCommands.AddSquadron.Builder.class);
    }

    public static final int NUMATTACKDICE_FIELD_NUMBER = 1;
    private int numAttackDice_;
    /**
     * <code>optional int32 numAttackDice = 1;</code>
     */
    public int getNumAttackDice() {
      return numAttackDice_;
    }

    public static final int NUMDEFENSEDICE_FIELD_NUMBER = 2;
    private int numDefenseDice_;
    /**
     * <code>optional int32 numDefenseDice = 2;</code>
     */
    public int getNumDefenseDice() {
      return numDefenseDice_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (numAttackDice_ != 0) {
        output.writeInt32(1, numAttackDice_);
      }
      if (numDefenseDice_ != 0) {
        output.writeInt32(2, numDefenseDice_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (numAttackDice_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, numAttackDice_);
      }
      if (numDefenseDice_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numDefenseDice_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static network.message.player.PlayerCommands.AddSquadron parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static network.message.player.PlayerCommands.AddSquadron parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static network.message.player.PlayerCommands.AddSquadron parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static network.message.player.PlayerCommands.AddSquadron parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static network.message.player.PlayerCommands.AddSquadron parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static network.message.player.PlayerCommands.AddSquadron parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static network.message.player.PlayerCommands.AddSquadron parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static network.message.player.PlayerCommands.AddSquadron parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static network.message.player.PlayerCommands.AddSquadron parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static network.message.player.PlayerCommands.AddSquadron parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(network.message.player.PlayerCommands.AddSquadron prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AddSquadron}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:AddSquadron)
        network.message.player.PlayerCommands.AddSquadronOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return network.message.player.PlayerCommands.internal_static_AddSquadron_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return network.message.player.PlayerCommands.internal_static_AddSquadron_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                network.message.player.PlayerCommands.AddSquadron.class, network.message.player.PlayerCommands.AddSquadron.Builder.class);
      }

      // Construct using network.message.player.PlayerCommands.AddSquadron.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        numAttackDice_ = 0;

        numDefenseDice_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.player.PlayerCommands.internal_static_AddSquadron_descriptor;
      }

      public network.message.player.PlayerCommands.AddSquadron getDefaultInstanceForType() {
        return network.message.player.PlayerCommands.AddSquadron.getDefaultInstance();
      }

      public network.message.player.PlayerCommands.AddSquadron build() {
        network.message.player.PlayerCommands.AddSquadron result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public network.message.player.PlayerCommands.AddSquadron buildPartial() {
        network.message.player.PlayerCommands.AddSquadron result = new network.message.player.PlayerCommands.AddSquadron(this);
        result.numAttackDice_ = numAttackDice_;
        result.numDefenseDice_ = numDefenseDice_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.player.PlayerCommands.AddSquadron) {
          return mergeFrom((network.message.player.PlayerCommands.AddSquadron)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(network.message.player.PlayerCommands.AddSquadron other) {
        if (other == network.message.player.PlayerCommands.AddSquadron.getDefaultInstance()) return this;
        if (other.getNumAttackDice() != 0) {
          setNumAttackDice(other.getNumAttackDice());
        }
        if (other.getNumDefenseDice() != 0) {
          setNumDefenseDice(other.getNumDefenseDice());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        network.message.player.PlayerCommands.AddSquadron parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (network.message.player.PlayerCommands.AddSquadron) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int numAttackDice_ ;
      /**
       * <code>optional int32 numAttackDice = 1;</code>
       */
      public int getNumAttackDice() {
        return numAttackDice_;
      }
      /**
       * <code>optional int32 numAttackDice = 1;</code>
       */
      public Builder setNumAttackDice(int value) {
        
        numAttackDice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 numAttackDice = 1;</code>
       */
      public Builder clearNumAttackDice() {
        
        numAttackDice_ = 0;
        onChanged();
        return this;
      }

      private int numDefenseDice_ ;
      /**
       * <code>optional int32 numDefenseDice = 2;</code>
       */
      public int getNumDefenseDice() {
        return numDefenseDice_;
      }
      /**
       * <code>optional int32 numDefenseDice = 2;</code>
       */
      public Builder setNumDefenseDice(int value) {
        
        numDefenseDice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 numDefenseDice = 2;</code>
       */
      public Builder clearNumDefenseDice() {
        
        numDefenseDice_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:AddSquadron)
    }

    // @@protoc_insertion_point(class_scope:AddSquadron)
    private static final network.message.player.PlayerCommands.AddSquadron DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new network.message.player.PlayerCommands.AddSquadron();
    }

    public static network.message.player.PlayerCommands.AddSquadron getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AddSquadron>
        PARSER = new com.google.protobuf.AbstractParser<AddSquadron>() {
      public AddSquadron parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new AddSquadron(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<AddSquadron> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AddSquadron> getParserForType() {
      return PARSER;
    }

    public network.message.player.PlayerCommands.AddSquadron getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlaceObstacleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlaceObstacle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 obstacleType = 1;</code>
     */
    int getObstacleType();
  }
  /**
   * Protobuf type {@code PlaceObstacle}
   */
  public  static final class PlaceObstacle extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:PlaceObstacle)
      PlaceObstacleOrBuilder {
    // Use PlaceObstacle.newBuilder() to construct.
    private PlaceObstacle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PlaceObstacle() {
      obstacleType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PlaceObstacle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              obstacleType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.player.PlayerCommands.internal_static_PlaceObstacle_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.player.PlayerCommands.internal_static_PlaceObstacle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              network.message.player.PlayerCommands.PlaceObstacle.class, network.message.player.PlayerCommands.PlaceObstacle.Builder.class);
    }

    public static final int OBSTACLETYPE_FIELD_NUMBER = 1;
    private int obstacleType_;
    /**
     * <code>optional int32 obstacleType = 1;</code>
     */
    public int getObstacleType() {
      return obstacleType_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (obstacleType_ != 0) {
        output.writeInt32(1, obstacleType_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (obstacleType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, obstacleType_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static network.message.player.PlayerCommands.PlaceObstacle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static network.message.player.PlayerCommands.PlaceObstacle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static network.message.player.PlayerCommands.PlaceObstacle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static network.message.player.PlayerCommands.PlaceObstacle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static network.message.player.PlayerCommands.PlaceObstacle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static network.message.player.PlayerCommands.PlaceObstacle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static network.message.player.PlayerCommands.PlaceObstacle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static network.message.player.PlayerCommands.PlaceObstacle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static network.message.player.PlayerCommands.PlaceObstacle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static network.message.player.PlayerCommands.PlaceObstacle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(network.message.player.PlayerCommands.PlaceObstacle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlaceObstacle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PlaceObstacle)
        network.message.player.PlayerCommands.PlaceObstacleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return network.message.player.PlayerCommands.internal_static_PlaceObstacle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return network.message.player.PlayerCommands.internal_static_PlaceObstacle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                network.message.player.PlayerCommands.PlaceObstacle.class, network.message.player.PlayerCommands.PlaceObstacle.Builder.class);
      }

      // Construct using network.message.player.PlayerCommands.PlaceObstacle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        obstacleType_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.player.PlayerCommands.internal_static_PlaceObstacle_descriptor;
      }

      public network.message.player.PlayerCommands.PlaceObstacle getDefaultInstanceForType() {
        return network.message.player.PlayerCommands.PlaceObstacle.getDefaultInstance();
      }

      public network.message.player.PlayerCommands.PlaceObstacle build() {
        network.message.player.PlayerCommands.PlaceObstacle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public network.message.player.PlayerCommands.PlaceObstacle buildPartial() {
        network.message.player.PlayerCommands.PlaceObstacle result = new network.message.player.PlayerCommands.PlaceObstacle(this);
        result.obstacleType_ = obstacleType_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.player.PlayerCommands.PlaceObstacle) {
          return mergeFrom((network.message.player.PlayerCommands.PlaceObstacle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(network.message.player.PlayerCommands.PlaceObstacle other) {
        if (other == network.message.player.PlayerCommands.PlaceObstacle.getDefaultInstance()) return this;
        if (other.getObstacleType() != 0) {
          setObstacleType(other.getObstacleType());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        network.message.player.PlayerCommands.PlaceObstacle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (network.message.player.PlayerCommands.PlaceObstacle) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int obstacleType_ ;
      /**
       * <code>optional int32 obstacleType = 1;</code>
       */
      public int getObstacleType() {
        return obstacleType_;
      }
      /**
       * <code>optional int32 obstacleType = 1;</code>
       */
      public Builder setObstacleType(int value) {
        
        obstacleType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 obstacleType = 1;</code>
       */
      public Builder clearObstacleType() {
        
        obstacleType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:PlaceObstacle)
    }

    // @@protoc_insertion_point(class_scope:PlaceObstacle)
    private static final network.message.player.PlayerCommands.PlaceObstacle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new network.message.player.PlayerCommands.PlaceObstacle();
    }

    public static network.message.player.PlayerCommands.PlaceObstacle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlaceObstacle>
        PARSER = new com.google.protobuf.AbstractParser<PlaceObstacle>() {
      public PlaceObstacle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new PlaceObstacle(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<PlaceObstacle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlaceObstacle> getParserForType() {
      return PARSER;
    }

    public network.message.player.PlayerCommands.PlaceObstacle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BaseCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BaseCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AddSquadron_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AddSquadron_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PlaceObstacle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PlaceObstacle_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:src/main/proto/network/message/player/" +
      "PlayerCommands.proto\"f\n\013BaseCommand\022#\n\013a" +
      "ddSquadron\030\001 \001(\0132\014.AddSquadronH\000\022\'\n\rplac" +
      "eObstacle\030\002 \001(\0132\016.PlaceObstacleH\000B\t\n\007com" +
      "mand\"<\n\013AddSquadron\022\025\n\rnumAttackDice\030\001 \001" +
      "(\005\022\026\n\016numDefenseDice\030\002 \001(\005\"%\n\rPlaceObsta" +
      "cle\022\024\n\014obstacleType\030\001 \001(\005B(\n\026network.mes" +
      "sage.playerB\016PlayerCommandsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_BaseCommand_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_BaseCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_BaseCommand_descriptor,
        new java.lang.String[] { "AddSquadron", "PlaceObstacle", "Command", });
    internal_static_AddSquadron_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_AddSquadron_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_AddSquadron_descriptor,
        new java.lang.String[] { "NumAttackDice", "NumDefenseDice", });
    internal_static_PlaceObstacle_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_PlaceObstacle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_PlaceObstacle_descriptor,
        new java.lang.String[] { "ObstacleType", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
