Notes:

GameServer
1. Have the board state always managed by a GameServer.  If playing locally, create a local GameServer to host the game.  This will make extending it to multiplayer trivial.
2. The GameServer can store a match by recording player setup, moves and the random seed for combat.  This will allow for replays.
3. The GameServer can optionally host a chat box for communication
4. Game server should resolve all maneuvers including collisions
5. Game server handles combat rolls
6. Game server calculates range / within firing arc / occluded / touching for each ship after each ship maneuver is complete
7. Game server tracks destruction / win condition of game
8. Game server receives interactions / actions from player as commands and updates board state

GameClient
1. Have a local BoardState for each client that is synchronized with the game server's board state.
2. All interactions from the player are sent to the GameServer as seperate commands.
3. Clients handle various logical interaction points with player for exceptions to rules and modifications to the game state requiring player decisions.
4. Receives board state update commands (or snapshot?) for applying ot the LocalBoardState to synchronize with server.

LocalBoardState / ServerBoardState
1. Store the position / rotation of every ship
2. Store the shield count / number of face down/up damage cards assigned to each ship
3. Store each players damage deck and the progress through it
4. Store the range, in/out firing arc of each ship, and occlusion flag -- O(n^2) ish possible mappings, but we're going to be capped at 8 ships per side, so this won't get too big
5. Build up the previous activation phase, storing the decloak / maneuvers / actions the ships take.  Allows game board to display these maneuvers, and have a combat log of what occurred.
